{"version":3,"file":"commands2.min.js","sources":["../src/commands2.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_fontcolor plugin.\n *\n * @module      tiny_fontcolor/commands\n * @copyright   2025 Veronica Bermegui\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    fontColorButtonName,\n    fontColorMenuItemName,\n    icon,\n} from './common';\n\n\nlet colorPickerContainer = null;\nlet isPickerVisible = false;\nlet clickHandler = null;\n\nconst showColorPicker = (editor, buttonTitle) => {\n    hideColorPicker();\n\n    const hasSelection = editor.selection.getContent({format: 'text'}).length > 0;\n    let currentColor = '#000000';\n\n    // Crear contenedor principal\n    colorPickerContainer = document.createElement('div');\n    colorPickerContainer.className = 'tiny-fontcolor-picker';\n    Object.assign(colorPickerContainer.style, {\n        position: 'fixed',\n        zIndex: '999999',\n        backgroundColor: 'white',\n        padding: '15px',\n        borderRadius: '5px',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        border: '1px solid #ddd',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n    });\n\n    // Input de color nativo\n    const colorInput = document.createElement('input');\n    colorInput.type = 'color';\n    colorInput.style.width = '100%';\n    colorInput.style.height = '40px';\n    colorInput.style.cursor = 'pointer';\n    colorInput.style.opacity = '1'; // Lo hacemos visible ahora\n\n    // Visualización del color\n    const colorPreview = document.createElement('div');\n    colorPreview.style.width = '100%';\n    colorPreview.style.minWidth = '50px';\n    colorPreview.style.height = '50px';\n    colorPreview.style.borderRadius = '4px';\n    colorPreview.style.border = '1px solid #ccc';\n    colorPreview.style.marginTop = '10px';\n\n    // Configurar color inicial\n    if (hasSelection) {\n        const selectedColor = getSelectionColor(editor);\n        if (selectedColor) {\n            currentColor = rgbToHex(selectedColor);\n            colorInput.value = currentColor;\n        }\n    }\n    colorPreview.style.backgroundColor = currentColor;\n\n    // Solo aplicar el color cuando se complete la selección (suelte el mouse)\n    colorInput.addEventListener('change', (e) => {\n        currentColor = e.target.value;\n        colorPreview.style.backgroundColor = currentColor;\n        editor.execCommand('ForeColor', false, currentColor);\n        hideColorPicker();\n    });\n\n    // Actualizar el preview mientras se mueve el selector (opcional)\n    colorInput.addEventListener('input', (e) => {\n        colorPreview.style.backgroundColor = e.target.value;\n    });\n\n    // Agregar elementos\n    colorPickerContainer.appendChild(colorInput);\n    colorPickerContainer.appendChild(colorPreview);\n\n    // Posicionamiento\n    const button = editor.editorContainer?.querySelector(`.tox-tbtn[aria-label=\"${buttonTitle}\"]`);\n    if (button) {\n        const rect = button.getBoundingClientRect();\n        Object.assign(colorPickerContainer.style, {\n            top: `${rect.bottom}px`,\n            left: `${rect.left}px`\n        });\n    }\n\n    // Agregar al documento\n    document.body.appendChild(colorPickerContainer);\n    isPickerVisible = true;\n\n    // Enfocar el input de color inmediatamente\n    colorInput.focus();\n\n    // Manejar cierre al hacer click fuera\n    clickHandler = (e) => {\n        if (!colorPickerContainer?.contains(e.target) && !button?.contains(e.target)) {\n            hideColorPicker();\n        }\n    };\n    document.addEventListener('mousedown', clickHandler);\n};\n\n// Función para obtener el color de la selección\nfunction getSelectionColor(editor) {\n    if (!editor || !editor.dom || !editor.selection) return null;\n\n    const dom = editor.dom;\n    const selection = editor.selection;\n    const nodes = selection.getSelectedBlocks() || [selection.getNode()];\n\n    for (const node of nodes) {\n        if (!node) continue;\n\n        const color = dom.getStyle(node, 'color') || node.getAttribute('color');\n        if (color) return color;\n\n        const coloredChildren = dom.select('*[style*=\"color\"], *[color]', node);\n        if (coloredChildren && coloredChildren.length > 0) {\n            const childColor = dom.getStyle(coloredChildren[0], 'color') ||\n                             coloredChildren[0]?.getAttribute('color');\n            if (childColor) return childColor;\n        }\n    }\n    return null;\n}\n\n// Función para ocultar el picker (actualizada)\nconst hideColorPicker = () => {\n    if (colorPickerContainer && isPickerVisible) {\n        if (colorPickerContainer.parentNode) {\n            colorPickerContainer.parentNode.removeChild(colorPickerContainer);\n        }\n        colorPickerContainer = null;\n        isPickerVisible = false;\n\n        if (clickHandler) {\n            document.removeEventListener('mousedown', clickHandler);\n            clickHandler = null;\n        }\n    }\n};\n\n// Función auxiliar para convertir RGB a HEX (mejorada)\nfunction rgbToHex(rgb) {\n    if (!rgb) return '#000000';\n\n    // Extraer los valores RGB (soporta rgb() y rgba())\n    const rgbValues = rgb.match(/\\d+/g);\n    if (!rgbValues || rgbValues.length < 3) return '#000000';\n\n    const r = parseInt(rgbValues[0]);\n    const g = parseInt(rgbValues[1]);\n    const b = parseInt(rgbValues[2]);\n\n    return '#' + [r, g, b].map(x => {\n        const hex = x.toString(16).padStart(2, '0');\n        return hex.length === 1 ? '0' + hex : hex;\n    }).join('');\n}\n\n\nexport const getSetup = async () => {\n    const [buttonTitle, menuTitle, btnImage] = await Promise.all([\n        getString('button_fontcolor', component),\n        getString('menuitem_fontcolor', component),\n        getButtonImage('icon', component)\n    ]);\n\n    return (editor) => {\n        editor.ui.registry.addIcon(icon, btnImage.html);\n\n        // Toolbar button\n        editor.ui.registry.addButton(fontColorButtonName, {\n            icon,\n            tooltip: buttonTitle,\n            onAction: () => {\n                if (isPickerVisible) {\n                    hideColorPicker();\n                } else {\n                    showColorPicker(editor, buttonTitle);\n                }\n            }\n        });\n\n        // Menu item (original behavior)\n        editor.ui.registry.addMenuItem(fontColorMenuItemName, {\n            icon,\n            text: menuTitle,\n            onAction: () => {\n                editor.execCommand('ForeColor', false, '#000000');\n            }\n        });\n\n        // Close picker when the editor loses focus\n        editor.on('blur', hideColorPicker);\n    };\n};"],"names":["colorPickerContainer","isPickerVisible","clickHandler","showColorPicker","editor","buttonTitle","hideColorPicker","hasSelection","selection","getContent","format","length","currentColor","document","createElement","className","Object","assign","style","position","zIndex","backgroundColor","padding","borderRadius","boxShadow","border","display","flexDirection","gap","colorInput","type","width","height","cursor","opacity","colorPreview","minWidth","marginTop","selectedColor","dom","nodes","getSelectedBlocks","getNode","node","color","getStyle","getAttribute","coloredChildren","select","childColor","_coloredChildren$","getSelectionColor","rgb","rgbValues","match","r","parseInt","g","b","map","x","hex","toString","padStart","join","rgbToHex","value","addEventListener","e","target","execCommand","appendChild","button","editorContainer","_editor$editorContain","querySelector","rect","getBoundingClientRect","top","bottom","left","body","focus","_colorPickerContainer","contains","parentNode","removeChild","removeEventListener","async","menuTitle","btnImage","Promise","all","component","ui","registry","addIcon","icon","html","addButton","fontColorButtonName","tooltip","onAction","addMenuItem","fontColorMenuItemName","text","on"],"mappings":"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"}