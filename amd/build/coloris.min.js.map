{"version":3,"file":"coloris.min.js","sources":["../src/coloris.js"],"sourcesContent":[" /*!\n * Copyright (c) 2021 Momo Bassit.\n * Licensed under the MIT License (MIT)\n * https://github.com/mdbassit/Coloris\n */\n\n(function (window, document, Math, undefined) {\n  var ctx = document.createElement('canvas').getContext('2d');\n  var currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n  var container,picker,colorArea,colorMarker,colorPreview,colorValue,clearButton,closeButton,\n  hueSlider,hueMarker,alphaSlider,alphaMarker,currentEl,currentFormat,oldColor,keyboardNav,\n  colorAreaDims = {};\n\n  // Default settings\n  var settings = {\n    el: '[data-coloris]',\n    parent: 'body',\n    theme: 'default',\n    themeMode: 'light',\n    rtl: false,\n    wrap: true,\n    margin: 2,\n    format: 'hex',\n    formatToggle: false,\n    swatches: [],\n    swatchesOnly: false,\n    alpha: true,\n    forceAlpha: false,\n    focusInput: true,\n    selectInput: false,\n    inline: false,\n    defaultColor: '#000000',\n    clearButton: false,\n    clearLabel: 'Clear',\n    closeButton: false,\n    closeLabel: 'Close',\n    onChange: function onChange() {return undefined;},\n    a11y: {\n      open: 'Open color picker',\n      close: 'Close color picker',\n      clear: 'Clear the selected color',\n      marker: 'Saturation: {s}. Brightness: {v}.',\n      hueSlider: 'Hue slider',\n      alphaSlider: 'Opacity slider',\n      input: 'Color value field',\n      format: 'Color format',\n      swatch: 'Color swatch',\n      instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.' } };\n\n\n\n  // Virtual instances cache\n  var instances = {};\n  var currentInstanceId = '';\n  var defaultInstance = {};\n  var hasInstance = false;\n\n  /**\n   * Configure the color picker.\n   * @param {object} options Configuration options.\n   */\n  function configure(options) {\n    if (typeof options !== 'object') {\n      return;\n    }\n\n    for (var key in options) {\n      switch (key) {\n        case 'el':\n          bindFields(options.el);\n          if (options.wrap !== false) {\n            wrapFields(options.el);\n          }\n          break;\n        case 'parent':\n          container = options.parent instanceof HTMLElement ? options.parent : document.querySelector(options.parent);\n          if (container) {\n            container.appendChild(picker);\n            settings.parent = options.parent;\n\n            // document.body is special\n            if (container === document.body) {\n              container = undefined;\n            }\n          }\n          break;\n        case 'themeMode':\n          settings.themeMode = options.themeMode;\n          if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            settings.themeMode = 'dark';\n          }\n        // The lack of a break statement is intentional\n        case 'theme':\n          if (options.theme) {\n            settings.theme = options.theme;\n          }\n\n          // Set the theme and color scheme\n          picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n\n          // Update the color picker's position if inline mode is in use\n          if (settings.inline) {\n            updatePickerPosition();\n          }\n          break;\n        case 'rtl':\n          settings.rtl = !!options.rtl;\n          Array.from(document.getElementsByClassName('clr-field')).forEach(function (field) {return field.classList.toggle('clr-rtl', settings.rtl);});\n          break;\n        case 'margin':\n          options.margin *= 1;\n          settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n          break;\n        case 'wrap':\n          if (options.el && options.wrap) {\n            wrapFields(options.el);\n          }\n          break;\n        case 'formatToggle':\n          settings.formatToggle = !!options.formatToggle;\n          getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n          if (settings.formatToggle) {\n            settings.format = 'auto';\n          }\n          break;\n        case 'swatches':\n          if (Array.isArray(options.swatches)) {(function () {\n              var swatchesContainer = getEl('clr-swatches');\n              var swatches = document.createElement('div');\n\n              // Clear current swatches\n              swatchesContainer.textContent = '';\n\n              // Build new swatches\n              options.swatches.forEach(function (swatch, i) {\n                var button = document.createElement('button');\n\n                button.setAttribute('type', \"button\");\n                button.setAttribute('id', \"clr-swatch-\" + i);\n                button.setAttribute('aria-labelledby', \"clr-swatch-label clr-swatch-\" + i);\n                button.style.color = swatch;\n                button.textContent = swatch;\n\n                swatches.appendChild(button);\n              });\n\n              // Append new swatches if any\n              if (options.swatches.length) {\n                swatchesContainer.appendChild(swatches);\n              }\n\n              settings.swatches = options.swatches.slice();})();\n          }\n          break;\n        case 'swatchesOnly':\n          settings.swatchesOnly = !!options.swatchesOnly;\n          picker.setAttribute('data-minimal', settings.swatchesOnly);\n          break;\n        case 'alpha':\n          settings.alpha = !!options.alpha;\n          picker.setAttribute('data-alpha', settings.alpha);\n          break;\n        case 'inline':\n          settings.inline = !!options.inline;\n          picker.setAttribute('data-inline', settings.inline);\n\n          if (settings.inline) {\n            var defaultColor = options.defaultColor || settings.defaultColor;\n\n            currentFormat = getColorFormatFromStr(defaultColor);\n            updatePickerPosition();\n            setColorFromStr(defaultColor);\n          }\n          break;\n        case 'clearButton':\n          // Backward compatibility\n          if (typeof options.clearButton === 'object') {\n            if (options.clearButton.label) {\n              settings.clearLabel = options.clearButton.label;\n              clearButton.innerHTML = settings.clearLabel;\n            }\n\n            options.clearButton = options.clearButton.show;\n          }\n\n          settings.clearButton = !!options.clearButton;\n          clearButton.style.display = settings.clearButton ? 'block' : 'none';\n          break;\n        case 'clearLabel':\n          settings.clearLabel = options.clearLabel;\n          clearButton.innerHTML = settings.clearLabel;\n          break;\n        case 'closeButton':\n          settings.closeButton = !!options.closeButton;\n\n          if (settings.closeButton) {\n            picker.insertBefore(closeButton, colorPreview);\n          } else {\n            colorPreview.appendChild(closeButton);\n          }\n\n          break;\n        case 'closeLabel':\n          settings.closeLabel = options.closeLabel;\n          closeButton.innerHTML = settings.closeLabel;\n          break;\n        case 'a11y':\n          var labels = options.a11y;\n          var update = false;\n\n          if (typeof labels === 'object') {\n            for (var label in labels) {\n              if (labels[label] && settings.a11y[label]) {\n                settings.a11y[label] = labels[label];\n                update = true;\n              }\n            }\n          }\n\n          if (update) {\n            var openLabel = getEl('clr-open-label');\n            var swatchLabel = getEl('clr-swatch-label');\n\n            openLabel.innerHTML = settings.a11y.open;\n            swatchLabel.innerHTML = settings.a11y.swatch;\n            closeButton.setAttribute('aria-label', settings.a11y.close);\n            clearButton.setAttribute('aria-label', settings.a11y.clear);\n            hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n            alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n            colorValue.setAttribute('aria-label', settings.a11y.input);\n            colorArea.setAttribute('aria-label', settings.a11y.instruction);\n          }\n          break;\n        default:\n          settings[key] = options[key];}\n\n    }\n  }\n\n  /**\n   * Add or update a virtual instance.\n   * @param {String} selector The CSS selector of the elements to which the instance is attached.\n   * @param {Object} options Per-instance options to apply.\n   */\n  function setVirtualInstance(selector, options) {\n    if (typeof selector === 'string' && typeof options === 'object') {\n      instances[selector] = options;\n      hasInstance = true;\n    }\n  }\n\n  /**\n   * Remove a virtual instance.\n   * @param {String} selector The CSS selector of the elements to which the instance is attached.\n   */\n  function removeVirtualInstance(selector) {\n    delete instances[selector];\n\n    if (Object.keys(instances).length === 0) {\n      hasInstance = false;\n\n      if (selector === currentInstanceId) {\n        resetVirtualInstance();\n      }\n    }\n  }\n\n  /**\n   * Attach a virtual instance to an element if it matches a selector.\n   * @param {Object} element Target element that will receive a virtual instance if applicable.\n   */\n  function attachVirtualInstance(element) {\n    if (hasInstance) {\n      // These options can only be set globally, not per instance\n      var unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];var _loop = function _loop(\n\n      selector) {\n        var options = instances[selector];\n\n        // If the element matches an instance's CSS selector\n        if (element.matches(selector)) {\n          currentInstanceId = selector;\n          defaultInstance = {};\n\n          // Delete unsupported options\n          unsupportedOptions.forEach(function (option) {return delete options[option];});\n\n          // Back up the default options so we can restore them later\n          for (var option in options) {\n            defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n          }\n\n          // Set the instance's options\n          configure(options);\n          return \"break\";\n        }};for (var selector in instances) {var _ret = _loop(selector);if (_ret === \"break\") break;\n      }\n    }\n  }\n\n  /**\n   * Revert any per-instance options that were previously applied.\n   */\n  function resetVirtualInstance() {\n    if (Object.keys(defaultInstance).length > 0) {\n      configure(defaultInstance);\n      currentInstanceId = '';\n      defaultInstance = {};\n    }\n  }\n\n  /**\n   * Bind the color picker to input fields that match the selector.\n   * @param {(string|HTMLElement|HTMLElement[])} selector A CSS selector string, a DOM element or a list of DOM elements.\n   */\n  function bindFields(selector) {\n    if (selector instanceof HTMLElement) {\n      selector = [selector];\n    }\n\n    if (Array.isArray(selector)) {\n      selector.forEach(function (field) {\n        addListener(field, 'click', openPicker);\n        addListener(field, 'input', updateColorPreview);\n      });\n    } else {\n      addListener(document, 'click', selector, openPicker);\n      addListener(document, 'input', selector, updateColorPreview);\n    }\n  }\n\n  /**\n   * Open the color picker.\n   * @param {object} event The event that opens the color picker.\n   */\n  function openPicker(event) {\n    // Skip if inline mode is in use\n    if (settings.inline) {\n      return;\n    }\n\n    // Apply any per-instance options first\n    attachVirtualInstance(event.target);\n\n    currentEl = event.target;\n    oldColor = currentEl.value;\n    currentFormat = getColorFormatFromStr(oldColor);\n    picker.classList.add('clr-open');\n\n    updatePickerPosition();\n    setColorFromStr(oldColor);\n\n    if (settings.focusInput || settings.selectInput) {\n      colorValue.focus({ preventScroll: true });\n      colorValue.setSelectionRange(currentEl.selectionStart, currentEl.selectionEnd);\n    }\n\n    if (settings.selectInput) {\n      colorValue.select();\n    }\n\n    // Always focus the first element when using keyboard navigation\n    if (keyboardNav || settings.swatchesOnly) {\n      getFocusableElements().shift().focus();\n    }\n\n    // Trigger an \"open\" event\n    currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n  }\n\n  /**\n   * Update the color picker's position and the color gradient's offset\n   */\n  function updatePickerPosition() {\n    var parent = container;\n    var scrollY = window.scrollY;\n    var pickerWidth = picker.offsetWidth;\n    var pickerHeight = picker.offsetHeight;\n    var reposition = { left: false, top: false };\n    var parentStyle, parentMarginTop, parentBorderTop;\n    var offset = { x: 0, y: 0 };\n\n    if (parent) {\n      parentStyle = window.getComputedStyle(parent);\n      parentMarginTop = parseFloat(parentStyle.marginTop);\n      parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n      offset = parent.getBoundingClientRect();\n      offset.y += parentBorderTop + scrollY;\n    }\n\n    if (!settings.inline) {\n      var coords = currentEl.getBoundingClientRect();\n      var left = coords.x;\n      var top = scrollY + coords.y + coords.height + settings.margin;\n\n      // If the color picker is inside a custom container\n      // set the position relative to it\n      if (parent) {\n        left -= offset.x;\n        top -= offset.y;\n\n        if (left + pickerWidth > parent.clientWidth) {\n          left += coords.width - pickerWidth;\n          reposition.left = true;\n        }\n\n        if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n          if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n            top -= coords.height + pickerHeight + settings.margin * 2;\n            reposition.top = true;\n          }\n        }\n\n        top += parent.scrollTop;\n\n        // Otherwise set the position relative to the whole document\n      } else {\n        if (left + pickerWidth > document.documentElement.clientWidth) {\n          left += coords.width - pickerWidth;\n          reposition.left = true;\n        }\n\n        if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n          if (pickerHeight + settings.margin <= coords.top) {\n            top = scrollY + coords.y - pickerHeight - settings.margin;\n            reposition.top = true;\n          }\n        }\n      }\n\n      picker.classList.toggle('clr-left', reposition.left);\n      picker.classList.toggle('clr-top', reposition.top);\n      picker.style.left = left + \"px\";\n      picker.style.top = top + \"px\";\n      offset.x += picker.offsetLeft;\n      offset.y += picker.offsetTop;\n    }\n\n    colorAreaDims = {\n      width: colorArea.offsetWidth,\n      height: colorArea.offsetHeight,\n      x: colorArea.offsetLeft + offset.x,\n      y: colorArea.offsetTop + offset.y };\n\n  }\n\n  /**\n   * Wrap the linked input fields in a div that adds a color preview.\n   * @param {(string|HTMLElement|HTMLElement[])} selector A CSS selector string, a DOM element or a list of DOM elements.\n   */\n  function wrapFields(selector) {\n    if (selector instanceof HTMLElement) {\n      wrapColorField(selector);\n    } else if (Array.isArray(selector)) {\n      selector.forEach(wrapColorField);\n    } else {\n      document.querySelectorAll(selector).forEach(wrapColorField);\n    }\n  }\n\n  /**\n   * Wrap an input field in a div that adds a color preview.\n   * @param {object} field The input field.\n   */\n  function wrapColorField(field) {\n    var parentNode = field.parentNode;\n\n    if (!parentNode.classList.contains('clr-field')) {\n      var wrapper = document.createElement('div');\n      var classes = 'clr-field';\n\n      if (settings.rtl || field.classList.contains('clr-rtl')) {\n        classes += ' clr-rtl';\n      }\n\n      wrapper.innerHTML = '<button type=\"button\" aria-labelledby=\"clr-open-label\"></button>';\n      parentNode.insertBefore(wrapper, field);\n      wrapper.className = classes;\n      wrapper.style.color = field.value;\n      wrapper.appendChild(field);\n    }\n  }\n\n  /**\n   * Update the color preview of an input field\n   * @param {object} event The \"input\" event that triggers the color change.\n   */\n  function updateColorPreview(event) {\n    var parent = event.target.parentNode;\n\n    // Only update the preview if the field has been previously wrapped\n    if (parent.classList.contains('clr-field')) {\n      parent.style.color = event.target.value;\n    }\n  }\n\n  /**\n   * Close the color picker.\n   * @param {boolean} [revert] If true, revert the color to the original value.\n   */\n  function closePicker(revert) {\n    if (currentEl && !settings.inline) {\n      var prevEl = currentEl;\n\n      // Revert the color to the original value if needed\n      if (revert) {\n        // This will prevent the \"change\" event on the colorValue input to execute its handler\n        currentEl = undefined;\n\n        if (oldColor !== prevEl.value) {\n          prevEl.value = oldColor;\n\n          // Trigger an \"input\" event to force update the thumbnail next to the input field\n          prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n        }\n      }\n\n      // Trigger a \"change\" event if needed\n      setTimeout(function () {// Add this to the end of the event loop\n        if (oldColor !== prevEl.value) {\n          prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n      });\n\n      // Hide the picker dialog\n      picker.classList.remove('clr-open');\n\n      // Reset any previously set per-instance options\n      if (hasInstance) {\n        resetVirtualInstance();\n      }\n\n      // Trigger a \"close\" event\n      prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n      if (settings.focusInput) {\n        prevEl.focus({ preventScroll: true });\n      }\n\n      // This essentially marks the picker as closed\n      currentEl = undefined;\n    }\n  }\n\n  /**\n   * Set the active color from a string.\n   * @param {string} str String representing a color.\n   */\n  function setColorFromStr(str) {\n    var rgba = strToRGBA(str);\n    var hsva = RGBAtoHSVA(rgba);\n\n    updateMarkerA11yLabel(hsva.s, hsva.v);\n    updateColor(rgba, hsva);\n\n    // Update the UI\n    hueSlider.value = hsva.h;\n    picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n    hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n    colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n    colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n    alphaSlider.value = hsva.a * 100;\n    alphaMarker.style.left = hsva.a * 100 + \"%\";\n  }\n\n  /**\n   * Guess the color format from a string.\n   * @param {string} str String representing a color.\n   * @return {string} The color format.\n   */\n  function getColorFormatFromStr(str) {\n    var format = str.substring(0, 3).toLowerCase();\n\n    if (format === 'rgb' || format === 'hsl') {\n      return format;\n    }\n\n    return 'hex';\n  }\n\n  /**\n   * Copy the active color to the linked input field.\n   * @param {number} [color] Color value to override the active color.\n   */\n  function pickColor(color) {\n    color = color !== undefined ? color : colorValue.value;\n\n    if (currentEl) {\n      currentEl.value = color;\n      currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n    }\n\n    if (settings.onChange) {\n      settings.onChange.call(window, color, currentEl);\n    }\n\n    document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color: color, currentEl: currentEl } }));\n  }\n\n  /**\n   * Set the active color based on a specific point in the color gradient.\n   * @param {number} x Left position.\n   * @param {number} y Top position.\n   */\n  function setColorAtPosition(x, y) {\n    var hsva = {\n      h: hueSlider.value * 1,\n      s: x / colorAreaDims.width * 100,\n      v: 100 - y / colorAreaDims.height * 100,\n      a: alphaSlider.value / 100 };\n\n    var rgba = HSVAtoRGBA(hsva);\n\n    updateMarkerA11yLabel(hsva.s, hsva.v);\n    updateColor(rgba, hsva);\n    pickColor();\n  }\n\n  /**\n   * Update the color marker's accessibility label.\n   * @param {number} saturation\n   * @param {number} value\n   */\n  function updateMarkerA11yLabel(saturation, value) {\n    var label = settings.a11y.marker;\n\n    saturation = saturation.toFixed(1) * 1;\n    value = value.toFixed(1) * 1;\n    label = label.replace('{s}', saturation);\n    label = label.replace('{v}', value);\n    colorMarker.setAttribute('aria-label', label);\n  }\n\n  //\n  /**\n   * Get the pageX and pageY positions of the pointer.\n   * @param {object} event The MouseEvent or TouchEvent object.\n   * @return {object} The pageX and pageY positions.\n   */\n  function getPointerPosition(event) {\n    return {\n      pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n      pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY };\n\n  }\n\n  /**\n   * Move the color marker when dragged.\n   * @param {object} event The MouseEvent object.\n   */\n  function moveMarker(event) {\n    var pointer = getPointerPosition(event);\n    var x = pointer.pageX - colorAreaDims.x;\n    var y = pointer.pageY - colorAreaDims.y;\n\n    if (container) {\n      y += container.scrollTop;\n    }\n\n    setMarkerPosition(x, y);\n\n    // Prevent scrolling while dragging the marker\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Move the color marker when the arrow keys are pressed.\n   * @param {number} offsetX The horizontal amount to move.\n   * @param {number} offsetY The vertical amount to move.\n   */\n  function moveMarkerOnKeydown(offsetX, offsetY) {\n    var x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n    var y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n    setMarkerPosition(x, y);\n  }\n\n  /**\n   * Set the color marker's position.\n   * @param {number} x Left position.\n   * @param {number} y Top position.\n   */\n  function setMarkerPosition(x, y) {\n    // Make sure the marker doesn't go out of bounds\n    x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n    y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n    // Set the position\n    colorMarker.style.left = x + \"px\";\n    colorMarker.style.top = y + \"px\";\n\n    // Update the color\n    setColorAtPosition(x, y);\n\n    // Make sure the marker is focused\n    colorMarker.focus();\n  }\n\n  /**\n   * Update the color picker's input field and preview thumb.\n   * @param {Object} rgba Red, green, blue and alpha values.\n   * @param {Object} [hsva] Hue, saturation, value and alpha values.\n   */\n  function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n    var format = settings.format;\n\n    for (var key in rgba) {\n      currentColor[key] = rgba[key];\n    }\n\n    for (var _key in hsva) {\n      currentColor[_key] = hsva[_key];\n    }\n\n    var hex = RGBAToHex(currentColor);\n    var opaqueHex = hex.substring(0, 7);\n\n    colorMarker.style.color = opaqueHex;\n    alphaMarker.parentNode.style.color = opaqueHex;\n    alphaMarker.style.color = hex;\n    colorPreview.style.color = hex;\n\n    // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n    colorArea.style.display = 'none';\n    colorArea.offsetHeight;\n    colorArea.style.display = '';\n    alphaMarker.nextElementSibling.style.display = 'none';\n    alphaMarker.nextElementSibling.offsetHeight;\n    alphaMarker.nextElementSibling.style.display = '';\n\n    if (format === 'mixed') {\n      format = currentColor.a === 1 ? 'hex' : 'rgb';\n    } else if (format === 'auto') {\n      format = currentFormat;\n    }\n\n    switch (format) {\n      case 'hex':\n        colorValue.value = hex;\n        break;\n      case 'rgb':\n        colorValue.value = RGBAToStr(currentColor);\n        break;\n      case 'hsl':\n        colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n        break;}\n\n\n    // Select the current format in the format switcher\n    document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n  }\n\n  /**\n   * Set the hue when its slider is moved.\n   */\n  function setHue() {\n    var hue = hueSlider.value * 1;\n    var x = colorMarker.style.left.replace('px', '') * 1;\n    var y = colorMarker.style.top.replace('px', '') * 1;\n\n    picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n    hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n    setColorAtPosition(x, y);\n  }\n\n  /**\n   * Set the alpha when its slider is moved.\n   */\n  function setAlpha() {\n    var alpha = alphaSlider.value / 100;\n\n    alphaMarker.style.left = alpha * 100 + \"%\";\n    updateColor({ a: alpha });\n    pickColor();\n  }\n\n  /**\n   * Convert HSVA to RGBA.\n   * @param {object} hsva Hue, saturation, value and alpha values.\n   * @return {object} Red, green, blue and alpha values.\n   */\n  function HSVAtoRGBA(hsva) {\n    var saturation = hsva.s / 100;\n    var value = hsva.v / 100;\n    var chroma = saturation * value;\n    var hueBy60 = hsva.h / 60;\n    var x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n    var m = value - chroma;\n\n    chroma = chroma + m;\n    x = x + m;\n\n    var index = Math.floor(hueBy60) % 6;\n    var red = [chroma, x, m, m, x, chroma][index];\n    var green = [x, chroma, chroma, x, m, m][index];\n    var blue = [m, m, x, chroma, chroma, x][index];\n\n    return {\n      r: Math.round(red * 255),\n      g: Math.round(green * 255),\n      b: Math.round(blue * 255),\n      a: hsva.a };\n\n  }\n\n  /**\n   * Convert HSVA to HSLA.\n   * @param {object} hsva Hue, saturation, value and alpha values.\n   * @return {object} Hue, saturation, lightness and alpha values.\n   */\n  function HSVAtoHSLA(hsva) {\n    var value = hsva.v / 100;\n    var lightness = value * (1 - hsva.s / 100 / 2);\n    var saturation;\n\n    if (lightness > 0 && lightness < 1) {\n      saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n    }\n\n    return {\n      h: hsva.h,\n      s: saturation || 0,\n      l: Math.round(lightness * 100),\n      a: hsva.a };\n\n  }\n\n  /**\n   * Convert RGBA to HSVA.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {object} Hue, saturation, value and alpha values.\n   */\n  function RGBAtoHSVA(rgba) {\n    var red = rgba.r / 255;\n    var green = rgba.g / 255;\n    var blue = rgba.b / 255;\n    var xmax = Math.max(red, green, blue);\n    var xmin = Math.min(red, green, blue);\n    var chroma = xmax - xmin;\n    var value = xmax;\n    var hue = 0;\n    var saturation = 0;\n\n    if (chroma) {\n      if (xmax === red) {hue = (green - blue) / chroma;}\n      if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n      if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n      if (xmax) {saturation = chroma / xmax;}\n    }\n\n    hue = Math.floor(hue * 60);\n\n    return {\n      h: hue < 0 ? hue + 360 : hue,\n      s: Math.round(saturation * 100),\n      v: Math.round(value * 100),\n      a: rgba.a };\n\n  }\n\n  /**\n   * Parse a string to RGBA.\n   * @param {string} str String representing a color.\n   * @return {object} Red, green, blue and alpha values.\n   */\n  function strToRGBA(str) {\n    var regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n    var match, rgba;\n\n    // Default to black for invalid color strings\n    ctx.fillStyle = '#000';\n\n    // Use canvas to convert the string to a valid color string\n    ctx.fillStyle = str;\n    match = regex.exec(ctx.fillStyle);\n\n    if (match) {\n      rgba = {\n        r: match[3] * 1,\n        g: match[4] * 1,\n        b: match[5] * 1,\n        a: match[6] * 1 };\n\n\n    } else {\n      match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(function (h) {return parseInt(h, 16);});\n      rgba = {\n        r: match[0],\n        g: match[1],\n        b: match[2],\n        a: 1 };\n\n    }\n\n    return rgba;\n  }\n\n  /**\n   * Convert RGBA to Hex.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {string} Hex color string.\n   */\n  function RGBAToHex(rgba) {\n    var R = rgba.r.toString(16);\n    var G = rgba.g.toString(16);\n    var B = rgba.b.toString(16);\n    var A = '';\n\n    if (rgba.r < 16) {\n      R = '0' + R;\n    }\n\n    if (rgba.g < 16) {\n      G = '0' + G;\n    }\n\n    if (rgba.b < 16) {\n      B = '0' + B;\n    }\n\n    if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n      var alpha = rgba.a * 255 | 0;\n      A = alpha.toString(16);\n\n      if (alpha < 16) {\n        A = '0' + A;\n      }\n    }\n\n    return '#' + R + G + B + A;\n  }\n\n  /**\n   * Convert RGBA values to a CSS rgb/rgba string.\n   * @param {object} rgba Red, green, blue and alpha values.\n   * @return {string} CSS color string.\n   */\n  function RGBAToStr(rgba) {\n    if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n      return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n    } else {\n      return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n    }\n  }\n\n  /**\n   * Convert HSLA values to a CSS hsl/hsla string.\n   * @param {object} hsla Hue, saturation, lightness and alpha values.\n   * @return {string} CSS color string.\n   */\n  function HSLAToStr(hsla) {\n    if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n      return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n    } else {\n      return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n    }\n  }\n\n  /**\n   * Init the color picker.\n   */\n  function init() {\n    // Render the UI\n    container = undefined;\n    picker = document.createElement('div');\n    picker.setAttribute('id', 'clr-picker');\n    picker.className = 'clr-picker';\n    picker.innerHTML =\n    \"<input id=\\\"clr-color-value\\\" name=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n    settings.a11y.instruction + \"\\\">\") +\n    '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n    '</div>' +\n    '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" name=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n    settings.a11y.hueSlider + \"\\\">\") +\n    '<div id=\"clr-hue-marker\"></div>' +\n    '</div>' +\n    '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" name=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n    settings.a11y.alphaSlider + \"\\\">\") +\n    '<div id=\"clr-alpha-marker\"></div>' +\n    '<span></span>' +\n    '</div>' +\n    '<div id=\"clr-format\" class=\"clr-format\">' +\n    '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n    settings.a11y.format + \"</legend>\") +\n    '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n    '<label for=\"clr-f1\">Hex</label>' +\n    '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n    '<label for=\"clr-f2\">RGB</label>' +\n    '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n    '<label for=\"clr-f3\">HSL</label>' +\n    '<span></span>' +\n    '</fieldset>' +\n    '</div>' +\n    '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button type=\\\"button\\\" id=\\\"clr-clear\\\" class=\\\"clr-clear\\\" aria-label=\\\"\" +\n    settings.a11y.clear + \"\\\">\" + settings.clearLabel + \"</button>\") +\n    '<div id=\"clr-color-preview\" class=\"clr-preview\">' + (\"<button type=\\\"button\\\" id=\\\"clr-close\\\" class=\\\"clr-close\\\" aria-label=\\\"\" +\n    settings.a11y.close + \"\\\">\" + settings.closeLabel + \"</button>\") +\n    '</div>' + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n    settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n    settings.a11y.swatch + \"</span>\");\n\n    // Append the color picker to the DOM\n    document.body.appendChild(picker);\n\n    // Reference the UI elements\n    colorArea = getEl('clr-color-area');\n    colorMarker = getEl('clr-color-marker');\n    clearButton = getEl('clr-clear');\n    closeButton = getEl('clr-close');\n    colorPreview = getEl('clr-color-preview');\n    colorValue = getEl('clr-color-value');\n    hueSlider = getEl('clr-hue-slider');\n    hueMarker = getEl('clr-hue-marker');\n    alphaSlider = getEl('clr-alpha-slider');\n    alphaMarker = getEl('clr-alpha-marker');\n\n    // Bind the picker to the default selector\n    bindFields(settings.el);\n    wrapFields(settings.el);\n\n    addListener(picker, 'mousedown', function (event) {\n      picker.classList.remove('clr-keyboard-nav');\n      event.stopPropagation();\n    });\n\n    addListener(colorArea, 'mousedown', function (event) {\n      addListener(document, 'mousemove', moveMarker);\n    });\n\n    addListener(colorArea, 'contextmenu', function (event) {\n      event.preventDefault();\n    });\n\n    addListener(colorArea, 'touchstart', function (event) {\n      document.addEventListener('touchmove', moveMarker, { passive: false });\n    });\n\n    addListener(colorMarker, 'mousedown', function (event) {\n      addListener(document, 'mousemove', moveMarker);\n    });\n\n    addListener(colorMarker, 'touchstart', function (event) {\n      document.addEventListener('touchmove', moveMarker, { passive: false });\n    });\n\n    addListener(colorValue, 'change', function (event) {\n      var value = colorValue.value;\n\n      if (currentEl || settings.inline) {\n        var color = value === '' ? value : setColorFromStr(value);\n        pickColor(color);\n      }\n    });\n\n    addListener(clearButton, 'click', function (event) {\n      pickColor('');\n      closePicker();\n    });\n\n    addListener(closeButton, 'click', function (event) {\n      pickColor();\n      closePicker();\n    });\n\n    addListener(getEl('clr-format'), 'click', '.clr-format input', function (event) {\n      currentFormat = event.target.value;\n      updateColor();\n      pickColor();\n    });\n\n    addListener(picker, 'click', '.clr-swatches button', function (event) {\n      setColorFromStr(event.target.textContent);\n      pickColor();\n\n      if (settings.swatchesOnly) {\n        closePicker();\n      }\n    });\n\n    addListener(document, 'mouseup', function (event) {\n      document.removeEventListener('mousemove', moveMarker);\n    });\n\n    addListener(document, 'touchend', function (event) {\n      document.removeEventListener('touchmove', moveMarker);\n    });\n\n    addListener(document, 'mousedown', function (event) {\n      keyboardNav = false;\n      picker.classList.remove('clr-keyboard-nav');\n      closePicker();\n    });\n\n    addListener(document, 'keydown', function (event) {\n      var key = event.key;\n      var target = event.target;\n      var shiftKey = event.shiftKey;\n      var navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n      if (key === 'Escape') {\n        closePicker(true);\n\n        // Display focus rings when using the keyboard\n      } else if (navKeys.includes(key)) {\n        keyboardNav = true;\n        picker.classList.add('clr-keyboard-nav');\n      }\n\n      // Trap the focus within the color picker while it's open\n      if (key === 'Tab' && target.matches('.clr-picker *')) {\n        var focusables = getFocusableElements();\n        var firstFocusable = focusables.shift();\n        var lastFocusable = focusables.pop();\n\n        if (shiftKey && target === firstFocusable) {\n          lastFocusable.focus();\n          event.preventDefault();\n        } else if (!shiftKey && target === lastFocusable) {\n          firstFocusable.focus();\n          event.preventDefault();\n        }\n      }\n    });\n\n    addListener(document, 'click', '.clr-field button', function (event) {\n      // Reset any previously set per-instance options\n      if (hasInstance) {\n        resetVirtualInstance();\n      }\n\n      // Open the color picker\n      event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n    });\n\n    addListener(colorMarker, 'keydown', function (event) {\n      var movements = {\n        ArrowUp: [0, -1],\n        ArrowDown: [0, 1],\n        ArrowLeft: [-1, 0],\n        ArrowRight: [1, 0] };\n\n\n      if (Object.keys(movements).includes(event.key)) {\n        moveMarkerOnKeydown.apply(void 0, movements[event.key]);\n        event.preventDefault();\n      }\n    });\n\n    addListener(colorArea, 'click', moveMarker);\n    addListener(hueSlider, 'input', setHue);\n    addListener(alphaSlider, 'input', setAlpha);\n  }\n\n  /**\n   * Return a list of focusable elements within the color picker.\n   * @return {array} The list of focusable DOM elemnts.\n   */\n  function getFocusableElements() {\n    var controls = Array.from(picker.querySelectorAll('input, button'));\n    var focusables = controls.filter(function (node) {return !!node.offsetWidth;});\n\n    return focusables;\n  }\n\n  /**\n   * Shortcut for getElementById to optimize the minified JS.\n   * @param {string} id The element id.\n   * @return {object} The DOM element with the provided id.\n   */\n  function getEl(id) {\n    return document.getElementById(id);\n  }\n\n  /**\n   * Shortcut for addEventListener to optimize the minified JS.\n   * @param {object} context The context to which the listener is attached.\n   * @param {string} type Event type.\n   * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n   * @param {function} [fn] Event handler if delegation is used.\n   */\n  function addListener(context, type, selector, fn) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n    // Delegate event to the target of the selector\n    if (typeof selector === 'string') {\n      context.addEventListener(type, function (event) {\n        if (matches.call(event.target, selector)) {\n          fn.call(event.target, event);\n        }\n      });\n\n      // If the selector is not a string then it's a function\n      // in which case we need a regular event listener\n    } else {\n      fn = selector;\n      context.addEventListener(type, fn);\n    }\n  }\n\n  /**\n   * Call a function only when the DOM is ready.\n   * @param {function} fn The function to call.\n   * @param {array} [args] Arguments to pass to the function.\n   */\n  function DOMReady(fn, args) {\n    args = args !== undefined ? args : [];\n\n    if (document.readyState !== 'loading') {\n      fn.apply(void 0, args);\n    } else {\n      document.addEventListener('DOMContentLoaded', function () {\n        fn.apply(void 0, args);\n      });\n    }\n  }\n\n  // Polyfill for Nodelist.forEach\n  if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n\n  // Expose the color picker to the global scope\n  window.Coloris = function () {\n    var methods = {\n      set: configure,\n      wrap: wrapFields,\n      close: closePicker,\n      setInstance: setVirtualInstance,\n      removeInstance: removeVirtualInstance,\n      updatePosition: updatePickerPosition,\n      ready: DOMReady };\n\n\n    function Coloris(options) {\n      DOMReady(function () {\n        if (options) {\n          if (typeof options === 'string') {\n            bindFields(options);\n          } else {\n            configure(options);\n          }\n        }\n      });\n    }var _loop2 = function _loop2(\n\n    key) {\n      Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {args[_key2] = arguments[_key2];}\n        DOMReady(methods[key], args);\n      };};for (var key in methods) {_loop2(key);\n    }\n\n    return Coloris;\n  }();\n\n  // Init the color picker when the DOM is ready\n  DOMReady(init);\n\n})(window, document, Math);"],"names":["window","document","Math","undefined","container","picker","colorArea","colorMarker","colorPreview","colorValue","clearButton","closeButton","hueSlider","hueMarker","alphaSlider","alphaMarker","currentEl","currentFormat","oldColor","keyboardNav","ctx","createElement","getContext","currentColor","r","g","b","h","s","v","a","colorAreaDims","settings","el","parent","theme","themeMode","rtl","wrap","margin","format","formatToggle","swatches","swatchesOnly","alpha","forceAlpha","focusInput","selectInput","inline","defaultColor","clearLabel","closeLabel","onChange","a11y","open","close","clear","marker","input","swatch","instruction","instances","currentInstanceId","defaultInstance","hasInstance","configure","options","key","bindFields","wrapFields","HTMLElement","querySelector","appendChild","body","matchMedia","matches","className","updatePickerPosition","Array","from","getElementsByClassName","forEach","field","classList","toggle","isNaN","getEl","style","display","isArray","swatchesContainer","textContent","i","button","setAttribute","color","length","slice","getColorFormatFromStr","setColorFromStr","label","innerHTML","show","insertBefore","labels","update","openLabel","swatchLabel","setVirtualInstance","selector","removeVirtualInstance","Object","keys","resetVirtualInstance","addListener","openPicker","updateColorPreview","event","element","unsupportedOptions","_loop","option","attachVirtualInstance","target","value","add","focus","preventScroll","setSelectionRange","selectionStart","selectionEnd","select","getFocusableElements","shift","dispatchEvent","Event","bubbles","parentStyle","parentMarginTop","parentBorderTop","scrollY","pickerWidth","offsetWidth","pickerHeight","offsetHeight","reposition","left","top","offset","x","y","getComputedStyle","parseFloat","marginTop","borderTopWidth","getBoundingClientRect","coords","height","clientWidth","width","clientHeight","scrollTop","documentElement","offsetLeft","offsetTop","wrapColorField","querySelectorAll","parentNode","contains","wrapper","classes","closePicker","revert","prevEl","setTimeout","remove","str","rgba","match","regex","fillStyle","exec","replace","map","parseInt","strToRGBA","hsva","red","green","blue","xmax","max","xmin","min","chroma","hue","saturation","floor","round","RGBAtoHSVA","updateMarkerA11yLabel","updateColor","substring","toLowerCase","pickColor","call","CustomEvent","detail","setColorAtPosition","hueBy60","abs","m","index","HSVAtoRGBA","toFixed","moveMarker","pointer","pageX","changedTouches","pageY","getPointerPosition","setMarkerPosition","preventDefault","stopPropagation","moveMarkerOnKeydown","offsetX","offsetY","_key","hsla","hex","R","toString","G","B","A","RGBAToHex","opaqueHex","nextElementSibling","RGBAToStr","lightness","l","HSVAtoHSLA","checked","setHue","setAlpha","filter","node","id","getElementById","context","type","fn","Element","prototype","msMatchesSelector","addEventListener","DOMReady","args","readyState","apply","NodeList","Coloris","methods","set","setInstance","removeInstance","updatePosition","ready","_loop2","_len","arguments","_key2","passive","removeEventListener","shiftKey","includes","focusables","firstFocusable","lastFocusable","pop","movements","ArrowUp","ArrowDown","ArrowLeft","ArrowRight"],"mappings":"CAMA,SAAWA,OAAQC,SAAUC,KAAMC,iBAG7BC,UAAUC,OAAOC,UAAUC,YAAYC,aAAaC,WAAWC,YAAYC,YAC/EC,UAAUC,UAAUC,YAAYC,YAAYC,UAAUC,cAAcC,SAASC,YAHzEC,IAAMnB,SAASoB,cAAc,UAAUC,WAAW,MAClDC,aAAe,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAG5DC,cAAgB,GAGZC,SAAW,CACbC,GAAI,iBACJC,OAAQ,OACRC,MAAO,UACPC,UAAW,QACXC,KAAK,EACLC,MAAM,EACNC,OAAQ,EACRC,OAAQ,MACRC,cAAc,EACdC,SAAU,GACVC,cAAc,EACdC,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,QAAQ,EACRC,aAAc,UACdvC,aAAa,EACbwC,WAAY,QACZvC,aAAa,EACbwC,WAAY,QACZC,SAAU,aACVC,KAAM,CACJC,KAAM,oBACNC,MAAO,qBACPC,MAAO,2BACPC,OAAQ,oCACR7C,UAAW,aACXE,YAAa,iBACb4C,MAAO,oBACPlB,OAAQ,eACRmB,OAAQ,eACRC,YAAa,2FAKbC,UAAY,GACZC,kBAAoB,GACpBC,gBAAkB,GAClBC,aAAc,WAMTC,UAAUC,YACM,iBAAZA,YAIN,IAAIC,OAAOD,eACNC,SACD,KACHC,WAAWF,QAAQjC,KACE,IAAjBiC,QAAQ5B,MACV+B,WAAWH,QAAQjC,cAGlB,UACH7B,UAAY8D,QAAQhC,kBAAkBoC,YAAcJ,QAAQhC,OAASjC,SAASsE,cAAcL,QAAQhC,WAElG9B,UAAUoE,YAAYnE,QACtB2B,SAASE,OAASgC,QAAQhC,OAGtB9B,YAAcH,SAASwE,OACzBrE,UA5Ed,sBAgFa,YACH4B,SAASI,UAAY8B,QAAQ9B,UACH,SAAtB8B,QAAQ9B,WAAwBpC,OAAO0E,YAAc1E,OAAO0E,WAAW,gCAAgCC,UACzG3C,SAASI,UAAY,YAGpB,QACC8B,QAAQ/B,QACVH,SAASG,MAAQ+B,QAAQ/B,OAI3B9B,OAAOuE,UAAY,kBAAoB5C,SAASG,MAAQ,QAAUH,SAASI,UAGvEJ,SAASgB,QACX6B,iCAGC,MACH7C,SAASK,MAAQ6B,QAAQ7B,IACzByC,MAAMC,KAAK9E,SAAS+E,uBAAuB,cAAcC,SAAQ,SAAUC,cAAeA,MAAMC,UAAUC,OAAO,UAAWpD,SAASK,kBAElI,SACH6B,QAAQ3B,QAAU,EAClBP,SAASO,OAAU8C,MAAMnB,QAAQ3B,QAA2BP,SAASO,OAA1B2B,QAAQ3B,iBAEhD,OACC2B,QAAQjC,IAAMiC,QAAQ5B,MACxB+B,WAAWH,QAAQjC,cAGlB,eACHD,SAASS,eAAiByB,QAAQzB,aAClC6C,MAAM,cAAcC,MAAMC,QAAUxD,SAASS,aAAe,QAAU,OAClET,SAASS,eACXT,SAASQ,OAAS,kBAGjB,WACCsC,MAAMW,QAAQvB,QAAQxB,0BAClBgD,kBAAoBJ,MAAM,gBAC1B5C,SAAWzC,SAASoB,cAAc,OAGtCqE,kBAAkBC,YAAc,GAGhCzB,QAAQxB,SAASuC,SAAQ,SAAUtB,OAAQiC,OACrCC,OAAS5F,SAASoB,cAAc,UAEpCwE,OAAOC,aAAa,OAAQ,UAC5BD,OAAOC,aAAa,KAAM,cAAgBF,GAC1CC,OAAOC,aAAa,kBAAmB,+BAAiCF,GACxEC,OAAON,MAAMQ,MAAQpC,OACrBkC,OAAOF,YAAchC,OAErBjB,SAAS8B,YAAYqB,WAInB3B,QAAQxB,SAASsD,QACnBN,kBAAkBlB,YAAY9B,UAGhCV,SAASU,SAAWwB,QAAQxB,SAASuD,qBAGtC,eACHjE,SAASW,eAAiBuB,QAAQvB,aAClCtC,OAAOyF,aAAa,eAAgB9D,SAASW,wBAE1C,QACHX,SAASY,QAAUsB,QAAQtB,MAC3BvC,OAAOyF,aAAa,aAAc9D,SAASY,iBAExC,YACHZ,SAASgB,SAAWkB,QAAQlB,OAC5B3C,OAAOyF,aAAa,cAAe9D,SAASgB,QAExChB,SAASgB,OAAQ,KACfC,aAAeiB,QAAQjB,cAAgBjB,SAASiB,aAEpDhC,cAAgBiF,sBAAsBjD,cACtC4B,uBACAsB,gBAAgBlD,wBAGf,cAEgC,iBAAxBiB,QAAQxD,cACbwD,QAAQxD,YAAY0F,QACtBpE,SAASkB,WAAagB,QAAQxD,YAAY0F,MAC1C1F,YAAY2F,UAAYrE,SAASkB,YAGnCgB,QAAQxD,YAAcwD,QAAQxD,YAAY4F,MAG5CtE,SAAStB,cAAgBwD,QAAQxD,YACjCA,YAAY6E,MAAMC,QAAUxD,SAAStB,YAAc,QAAU,iBAE1D,aACHsB,SAASkB,WAAagB,QAAQhB,WAC9BxC,YAAY2F,UAAYrE,SAASkB,qBAE9B,cACHlB,SAASrB,cAAgBuD,QAAQvD,YAE7BqB,SAASrB,YACXN,OAAOkG,aAAa5F,YAAaH,cAEjCA,aAAagE,YAAY7D,uBAIxB,aACHqB,SAASmB,WAAae,QAAQf,WAC9BxC,YAAY0F,UAAYrE,SAASmB,qBAE9B,WACCqD,OAAStC,QAAQb,KACjBoD,QAAS,KAES,iBAAXD,WACJ,IAAIJ,SAASI,OACZA,OAAOJ,QAAUpE,SAASqB,KAAK+C,SACjCpE,SAASqB,KAAK+C,OAASI,OAAOJ,OAC9BK,QAAS,MAKXA,OAAQ,KACNC,UAAYpB,MAAM,kBAClBqB,YAAcrB,MAAM,oBAExBoB,UAAUL,UAAYrE,SAASqB,KAAKC,KACpCqD,YAAYN,UAAYrE,SAASqB,KAAKM,OACtChD,YAAYmF,aAAa,aAAc9D,SAASqB,KAAKE,OACrD7C,YAAYoF,aAAa,aAAc9D,SAASqB,KAAKG,OACrD5C,UAAUkF,aAAa,aAAc9D,SAASqB,KAAKzC,WACnDE,YAAYgF,aAAa,aAAc9D,SAASqB,KAAKvC,aACrDL,WAAWqF,aAAa,aAAc9D,SAASqB,KAAKK,OACpDpD,UAAUwF,aAAa,aAAc9D,SAASqB,KAAKO,2BAIrD5B,SAASmC,KAAOD,QAAQC,eAUvByC,mBAAmBC,SAAU3C,SACZ,iBAAb2C,UAA4C,iBAAZ3C,UACzCL,UAAUgD,UAAY3C,QACtBF,aAAc,YAQT8C,sBAAsBD,iBACtBhD,UAAUgD,UAEqB,IAAlCE,OAAOC,KAAKnD,WAAWmC,SACzBhC,aAAc,EAEV6C,WAAa/C,mBACfmD,iCAyCGA,uBACHF,OAAOC,KAAKjD,iBAAiBiC,OAAS,IACxC/B,UAAUF,iBACVD,kBAAoB,GACpBC,gBAAkB,aAQbK,WAAWyC,UACdA,oBAAoBvC,cACtBuC,SAAW,CAACA,WAGV/B,MAAMW,QAAQoB,UAChBA,SAAS5B,SAAQ,SAAUC,OACzBgC,YAAYhC,MAAO,QAASiC,YAC5BD,YAAYhC,MAAO,QAASkC,wBAG9BF,YAAYjH,SAAU,QAAS4G,SAAUM,YACzCD,YAAYjH,SAAU,QAAS4G,SAAUO,8BAQpCD,WAAWE,OAEdrF,SAASgB,mBAlEgBsE,YACzBtD,YAAa,KAEXuD,mBAAqB,CAAC,KAAM,OAAQ,MAAO,SAAU,eAAgB,QAAYC,MAAQ,SAE7FX,cACM3C,QAAUL,UAAUgD,aAGpBS,QAAQ3C,QAAQkC,UAAW,KAQxB,IAAIY,UAPT3D,kBAAoB+C,SACpB9C,gBAAkB,GAGlBwD,mBAAmBtC,SAAQ,SAAUwC,sBAAuBvD,QAAQuD,WAGjDvD,QACjBH,gBAAgB0D,QAAU3C,MAAMW,QAAQzD,SAASyF,SAAWzF,SAASyF,QAAQxB,QAAUjE,SAASyF,eAIlGxD,UAAUC,SACH,cACD,IAAI2C,YAAYhD,aAAoD,UAA7B2D,MAAMX,UAAgC,OA+CzFa,CAAsBL,MAAMM,QAE5B3G,UAAYqG,MAAMM,OAClBzG,SAAWF,UAAU4G,MACrB3G,cAAgBiF,sBAAsBhF,UACtCb,OAAO8E,UAAU0C,IAAI,YAErBhD,uBACAsB,gBAAgBjF,WAEZc,SAASc,YAAcd,SAASe,eAClCtC,WAAWqH,MAAM,CAAEC,eAAe,IAClCtH,WAAWuH,kBAAkBhH,UAAUiH,eAAgBjH,UAAUkH,eAG/DlG,SAASe,aACXtC,WAAW0H,UAIThH,aAAea,SAASW,eAC1ByF,uBAAuBC,QAAQP,QAIjC9G,UAAUsH,cAAc,IAAIC,MAAM,OAAQ,CAAEC,SAAS,eAM9C3D,2BAMH4D,YAAaC,gBAAiBC,gBAL9BzG,OAAS9B,UACTwI,QAAU5I,OAAO4I,QACjBC,YAAcxI,OAAOyI,YACrBC,aAAe1I,OAAO2I,aACtBC,WAAa,CAAEC,MAAM,EAAOC,KAAK,GAEjCC,OAAS,CAAEC,EAAG,EAAGC,EAAG,MAEpBpH,SACFuG,YAAczI,OAAOuJ,iBAAiBrH,QACtCwG,gBAAkBc,WAAWf,YAAYgB,WACzCd,gBAAkBa,WAAWf,YAAYiB,iBAEzCN,OAASlH,OAAOyH,yBACTL,GAAKX,gBAAkBC,UAG3B5G,SAASgB,OAAQ,KAChB4G,OAAS5I,UAAU2I,wBACnBT,KAAOU,OAAOP,EACdF,IAAMP,QAAUgB,OAAON,EAAIM,OAAOC,OAAS7H,SAASO,OAIpDL,QACFgH,MAAQE,OAAOC,EACfF,KAAOC,OAAOE,EAEVJ,KAAOL,YAAc3G,OAAO4H,cAC9BZ,MAAQU,OAAOG,MAAQlB,YACvBI,WAAWC,MAAO,GAGhBC,IAAMJ,aAAe7G,OAAO8H,aAAetB,iBACzCK,aAAe/G,SAASO,QAAUqH,OAAOT,KAAOC,OAAOE,EAAIV,WAC7DO,KAAOS,OAAOC,OAASd,aAAiC,EAAlB/G,SAASO,OAC/C0G,WAAWE,KAAM,GAIrBA,KAAOjH,OAAO+H,YAIVf,KAAOL,YAAc5I,SAASiK,gBAAgBJ,cAChDZ,MAAQU,OAAOG,MAAQlB,YACvBI,WAAWC,MAAO,GAGhBC,IAAMJ,aAAeH,QAAU3I,SAASiK,gBAAgBF,cACtDjB,aAAe/G,SAASO,QAAUqH,OAAOT,MAC3CA,IAAMP,QAAUgB,OAAON,EAAIP,aAAe/G,SAASO,OACnD0G,WAAWE,KAAM,IAKvB9I,OAAO8E,UAAUC,OAAO,WAAY6D,WAAWC,MAC/C7I,OAAO8E,UAAUC,OAAO,UAAW6D,WAAWE,KAC9C9I,OAAOkF,MAAM2D,KAAOA,KAAO,KAC3B7I,OAAOkF,MAAM4D,IAAMA,IAAM,KACzBC,OAAOC,GAAKhJ,OAAO8J,WACnBf,OAAOE,GAAKjJ,OAAO+J,UAGrBrI,cAAgB,CACdgI,MAAOzJ,UAAUwI,YACjBe,OAAQvJ,UAAU0I,aAClBK,EAAG/I,UAAU6J,WAAaf,OAAOC,EACjCC,EAAGhJ,UAAU8J,UAAYhB,OAAOE,YAQ3BjF,WAAWwC,UACdA,oBAAoBvC,YACtB+F,eAAexD,UACN/B,MAAMW,QAAQoB,UACvBA,SAAS5B,QAAQoF,gBAEjBpK,SAASqK,iBAAiBzD,UAAU5B,QAAQoF,yBAQvCA,eAAenF,WAClBqF,WAAarF,MAAMqF,eAElBA,WAAWpF,UAAUqF,SAAS,aAAc,KAC3CC,QAAUxK,SAASoB,cAAc,OACjCqJ,QAAU,aAEV1I,SAASK,KAAO6C,MAAMC,UAAUqF,SAAS,cAC3CE,SAAW,YAGbD,QAAQpE,UAAY,mEACpBkE,WAAWhE,aAAakE,QAASvF,OACjCuF,QAAQ7F,UAAY8F,QACpBD,QAAQlF,MAAMQ,MAAQb,MAAM0C,MAC5B6C,QAAQjG,YAAYU,iBAQfkC,mBAAmBC,WACtBnF,OAASmF,MAAMM,OAAO4C,WAGtBrI,OAAOiD,UAAUqF,SAAS,eAC5BtI,OAAOqD,MAAMQ,MAAQsB,MAAMM,OAAOC,gBAQ7B+C,YAAYC,WACf5J,YAAcgB,SAASgB,OAAQ,KAC7B6H,OAAS7J,UAGT4J,SAEF5J,UAtfR,UAwfYE,WAAa2J,OAAOjD,QACtBiD,OAAOjD,MAAQ1G,SAGf2J,OAAOvC,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAKvDsC,YAAW,WACL5J,WAAa2J,OAAOjD,OACtBiD,OAAOvC,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,QAKxDnI,OAAO8E,UAAU4F,OAAO,YAGpB/G,aACFiD,uBAIF4D,OAAOvC,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,KAE/CxG,SAASc,YACX+H,OAAO/C,MAAM,CAAEC,eAAe,IAIhC/G,UAvhBN,oBA+hBWmF,gBAAgB6E,SACnBC,cAgUaD,SAEbE,MAAOD,KADPE,MAAQ,wEAIZ/J,IAAIgK,UAAY,OAGhBhK,IAAIgK,UAAYJ,IAIdC,MAHFC,MAAQC,MAAME,KAAKjK,IAAIgK,YAGd,CACL5J,EAAc,EAAX0J,MAAM,GACTzJ,EAAc,EAAXyJ,MAAM,GACTxJ,EAAc,EAAXwJ,MAAM,GACTpJ,EAAc,EAAXoJ,MAAM,IAKJ,CACL1J,GAFF0J,MAAQ9J,IAAIgK,UAAUE,QAAQ,IAAK,IAAIJ,MAAM,SAASK,KAAI,SAAU5J,UAAW6J,SAAS7J,EAAG,QAEhF,GACTF,EAAGyJ,MAAM,GACTxJ,EAAGwJ,MAAM,GACTpJ,EAAG,UAIAmJ,KA7VIQ,CAAUT,KACjBU,cA8RcT,UACdU,IAAMV,KAAKzJ,EAAI,IACfoK,MAAQX,KAAKxJ,EAAI,IACjBoK,KAAOZ,KAAKvJ,EAAI,IAChBoK,KAAO5L,KAAK6L,IAAIJ,IAAKC,MAAOC,MAC5BG,KAAO9L,KAAK+L,IAAIN,IAAKC,MAAOC,MAC5BK,OAASJ,KAAOE,KAChBpE,MAAQkE,KACRK,IAAM,EACNC,WAAa,EAEbF,SACEJ,OAASH,MAAMQ,KAAOP,MAAQC,MAAQK,QACtCJ,OAASF,QAAQO,IAAM,GAAKN,KAAOF,KAAOO,QAC1CJ,OAASD,OAAOM,IAAM,GAAKR,IAAMC,OAASM,QAC1CJ,OAAOM,WAAaF,OAASJ,aAK5B,CACLnK,GAHFwK,IAAMjM,KAAKmM,MAAY,GAANF,MAGN,EAAIA,IAAM,IAAMA,IACzBvK,EAAG1B,KAAKoM,MAAmB,IAAbF,YACdvK,EAAG3B,KAAKoM,MAAc,IAAR1E,OACd9F,EAAGmJ,KAAKnJ,GAtTCyK,CAAWtB,MAEtBuB,sBAAsBd,KAAK9J,EAAG8J,KAAK7J,GACnC4K,YAAYxB,KAAMS,MAGlB9K,UAAUgH,MAAQ8D,KAAK/J,EACvBtB,OAAOkF,MAAMQ,MAAQ,OAAS2F,KAAK/J,EAAI,eACvCd,UAAU0E,MAAM2D,KAAOwC,KAAK/J,EAAI,IAAM,IAAM,IAE5CpB,YAAYgF,MAAM2D,KAAOnH,cAAcgI,MAAQ2B,KAAK9J,EAAI,IAAM,KAC9DrB,YAAYgF,MAAM4D,IAAMpH,cAAc8H,OAAS9H,cAAc8H,OAAS6B,KAAK7J,EAAI,IAAM,KAErFf,YAAY8G,MAAiB,IAAT8D,KAAK5J,EACzBf,YAAYwE,MAAM2D,KAAgB,IAATwC,KAAK5J,EAAU,aAQjCoE,sBAAsB8E,SACzBxI,OAASwI,IAAI0B,UAAU,EAAG,GAAGC,oBAElB,QAAXnK,QAA+B,QAAXA,OACfA,OAGF,eAOAoK,UAAU7G,OACjBA,MAtkBJ,YAskBYA,MAAsBA,MAAQtF,WAAWmH,MAE7C5G,YACFA,UAAU4G,MAAQ7B,MAClB/E,UAAUsH,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,MAGpDxG,SAASoB,UACXpB,SAASoB,SAASyJ,KAAK7M,OAAQ+F,MAAO/E,WAGxCf,SAASqI,cAAc,IAAIwE,YAAY,eAAgB,CAAEC,OAAQ,CAAEhH,MAAOA,MAAO/E,UAAWA,uBAQrFgM,mBAAmB3D,EAAGC,OACzBoC,KAAO,CACT/J,EAAqB,EAAlBf,UAAUgH,MACbhG,EAAGyH,EAAItH,cAAcgI,MAAQ,IAC7BlI,EAAG,IAAMyH,EAAIvH,cAAc8H,OAAS,IACpC/H,EAAGhB,YAAY8G,MAAQ,KAErBqD,cA4KcS,UACdU,WAAaV,KAAK9J,EAAI,IACtBgG,MAAQ8D,KAAK7J,EAAI,IACjBqK,OAASE,WAAaxE,MACtBqF,QAAUvB,KAAK/J,EAAI,GACnB0H,EAAI6C,QAAU,EAAIhM,KAAKgN,IAAID,QAAU,EAAI,IACzCE,EAAIvF,MAAQsE,OAEhBA,QAAkBiB,EAClB9D,GAAQ8D,MAEJC,MAAQlN,KAAKmM,MAAMY,SAAW,EAC9BtB,IAAM,CAACO,OAAQ7C,EAAG8D,EAAGA,EAAG9D,EAAG6C,QAAQkB,OACnCxB,MAAQ,CAACvC,EAAG6C,OAAQA,OAAQ7C,EAAG8D,EAAGA,GAAGC,OACrCvB,KAAO,CAACsB,EAAGA,EAAG9D,EAAG6C,OAAQA,OAAQ7C,GAAG+D,aAEjC,CACL5L,EAAGtB,KAAKoM,MAAY,IAANX,KACdlK,EAAGvB,KAAKoM,MAAc,IAARV,OACdlK,EAAGxB,KAAKoM,MAAa,IAAPT,MACd/J,EAAG4J,KAAK5J,GAhMCuL,CAAW3B,MAEtBc,sBAAsBd,KAAK9J,EAAG8J,KAAK7J,GACnC4K,YAAYxB,KAAMS,MAClBkB,qBAQOJ,sBAAsBJ,WAAYxE,WACrCxB,MAAQpE,SAASqB,KAAKI,OAE1B2I,WAAqC,EAAxBA,WAAWkB,QAAQ,GAChC1F,MAA2B,EAAnBA,MAAM0F,QAAQ,GAEtBlH,OADAA,MAAQA,MAAMkF,QAAQ,MAAOc,aACfd,QAAQ,MAAO1D,OAC7BrH,YAAYuF,aAAa,aAAcM,gBAoBhCmH,WAAWlG,WACdmG,iBAZsBnG,aACnB,CACLoG,MAAOpG,MAAMqG,eAAiBrG,MAAMqG,eAAe,GAAGD,MAAQpG,MAAMoG,MACpEE,MAAOtG,MAAMqG,eAAiBrG,MAAMqG,eAAe,GAAGC,MAAQtG,MAAMsG,OASxDC,CAAmBvG,OAC7BgC,EAAImE,QAAQC,MAAQ1L,cAAcsH,EAClCC,EAAIkE,QAAQG,MAAQ5L,cAAcuH,EAElClJ,YACFkJ,GAAKlJ,UAAU6J,WAGjB4D,kBAAkBxE,EAAGC,GAGrBjC,MAAMyG,iBACNzG,MAAM0G,2BAQCC,oBAAoBC,QAASC,SAIpCL,kBAHmD,EAA3CtN,YAAYgF,MAAM2D,KAAKoC,QAAQ,KAAM,IAAU2C,QACL,EAA1C1N,YAAYgF,MAAM4D,IAAImC,QAAQ,KAAM,IAAU4C,kBAU/CL,kBAAkBxE,EAAGC,GAE5BD,EAAIA,EAAI,EAAI,EAAIA,EAAItH,cAAcgI,MAAQhI,cAAcgI,MAAQV,EAChEC,EAAIA,EAAI,EAAI,EAAIA,EAAIvH,cAAc8H,OAAS9H,cAAc8H,OAASP,EAGlE/I,YAAYgF,MAAM2D,KAAOG,EAAI,KAC7B9I,YAAYgF,MAAM4D,IAAMG,EAAI,KAG5B0D,mBAAmB3D,EAAGC,GAGtB/I,YAAYuH,iBAQL2E,YAAYxB,KAAMS,WAAoB,IAATT,OAAkBA,KAAO,SAAiB,IAATS,OAAkBA,KAAO,QAC1FlJ,OAASR,SAASQ,WAEjB,IAAI2B,OAAO8G,KACd1J,aAAa4C,KAAO8G,KAAK9G,SAGtB,IAAIgK,QAAQzC,KACfnK,aAAa4M,MAAQzC,KAAKyC,UAgPXC,KA7ObC,aA6LapD,UACbqD,EAAIrD,KAAKzJ,EAAE+M,SAAS,IACpBC,EAAIvD,KAAKxJ,EAAE8M,SAAS,IACpBE,EAAIxD,KAAKvJ,EAAE6M,SAAS,IACpBG,EAAI,GAEJzD,KAAKzJ,EAAI,KACX8M,EAAI,IAAMA,GAGRrD,KAAKxJ,EAAI,KACX+M,EAAI,IAAMA,GAGRvD,KAAKvJ,EAAI,KACX+M,EAAI,IAAMA,MAGRzM,SAASY,QAAUqI,KAAKnJ,EAAI,GAAKE,SAASa,YAAa,KACrDD,MAAiB,IAATqI,KAAKnJ,EAAU,EAC3B4M,EAAI9L,MAAM2L,SAAS,IAEf3L,MAAQ,KACV8L,EAAI,IAAMA,SAIP,IAAMJ,EAAIE,EAAIC,EAAIC,EAxNfC,CAAUpN,cAChBqN,UAAYP,IAAI3B,UAAU,EAAG,UAEjCnM,YAAYgF,MAAMQ,MAAQ6I,UAC1B7N,YAAYwJ,WAAWhF,MAAMQ,MAAQ6I,UACrC7N,YAAYwE,MAAMQ,MAAQsI,IAC1B7N,aAAa+E,MAAMQ,MAAQsI,IAG3B/N,UAAUiF,MAAMC,QAAU,OAC1BlF,UAAU0I,aACV1I,UAAUiF,MAAMC,QAAU,GAC1BzE,YAAY8N,mBAAmBtJ,MAAMC,QAAU,OAC/CzE,YAAY8N,mBAAmB7F,aAC/BjI,YAAY8N,mBAAmBtJ,MAAMC,QAAU,GAEhC,UAAXhD,OACFA,OAA4B,IAAnBjB,aAAaO,EAAU,MAAQ,MACpB,SAAXU,SACTA,OAASvB,eAGHuB,YACD,MACH/B,WAAWmH,MAAQyG,cAEhB,MACH5N,WAAWmH,eAqMEqD,aACZjJ,SAASY,OAAoB,IAAXqI,KAAKnJ,IAAYE,SAASa,WACxC,OAASoI,KAAKzJ,EAAI,KAAOyJ,KAAKxJ,EAAI,KAAOwJ,KAAKvJ,EAAI,IAElD,QAAUuJ,KAAKzJ,EAAI,KAAOyJ,KAAKxJ,EAAI,KAAOwJ,KAAKvJ,EAAI,KAAOuJ,KAAKnJ,EAAI,IAzMrDgN,CAAUvN,wBAE1B,MACHd,WAAWmH,OA+MEwG,cA5IC1C,UAGdU,WAFAxE,MAAQ8D,KAAK7J,EAAI,IACjBkN,UAAYnH,OAAS,EAAI8D,KAAK9J,EAAI,IAAM,UAGxCmN,UAAY,GAAKA,UAAY,IAC/B3C,WAAalM,KAAKoM,OAAO1E,MAAQmH,WAAa7O,KAAK+L,IAAI8C,UAAW,EAAIA,WAAa,MAG9E,CACLpN,EAAG+J,KAAK/J,EACRC,EAAGwK,YAAc,EACjB4C,EAAG9O,KAAKoM,MAAkB,IAAZyC,WACdjN,EAAG4J,KAAK5J,GAhFuBmN,CAAW1N,eAgNvCS,SAASY,OAAoB,IAAXwL,KAAKtM,IAAYE,SAASa,WACxC,OAASuL,KAAKzM,EAAI,KAAOyM,KAAKxM,EAAI,MAAQwM,KAAKY,EAAI,KAEnD,QAAUZ,KAAKzM,EAAI,KAAOyM,KAAKxM,EAAI,MAAQwM,KAAKY,EAAI,MAAQZ,KAAKtM,EAAI,KA9M9E7B,SAASsE,cAAc,uBAA0B/B,OAAS,MAAO0M,SAAU,WAMpEC,aACHhD,IAAwB,EAAlBvL,UAAUgH,MAChByB,EAA+C,EAA3C9I,YAAYgF,MAAM2D,KAAKoC,QAAQ,KAAM,IACzChC,EAA8C,EAA1C/I,YAAYgF,MAAM4D,IAAImC,QAAQ,KAAM,IAE5CjL,OAAOkF,MAAMQ,MAAQ,OAASoG,IAAM,eACpCtL,UAAU0E,MAAM2D,KAAOiD,IAAM,IAAM,IAAM,IAEzCa,mBAAmB3D,EAAGC,YAMf8F,eACHxM,MAAQ9B,YAAY8G,MAAQ,IAEhC7G,YAAYwE,MAAM2D,KAAe,IAARtG,MAAc,IACvC6J,YAAY,CAAE3K,EAAGc,QACjBgK,qBAgYOxE,8BACQtD,MAAMC,KAAK1E,OAAOiK,iBAAiB,kBACxB+E,QAAO,SAAUC,cAAgBA,KAAKxG,wBAUzDxD,MAAMiK,WACNtP,SAASuP,eAAeD,aAUxBrI,YAAYuI,QAASC,KAAM7I,SAAU8I,QACxChL,QAAUiL,QAAQC,UAAUlL,SAAWiL,QAAQC,UAAUC,kBAGrC,iBAAbjJ,SACT4I,QAAQM,iBAAiBL,MAAM,SAAUrI,OACnC1C,QAAQkI,KAAKxF,MAAMM,OAAQd,WAC7B8I,GAAG9C,KAAKxF,MAAMM,OAAQN,WAO1BsI,GAAK9I,SACL4I,QAAQM,iBAAiBL,KAAMC,cAS1BK,SAASL,GAAIM,MACpBA,KAprCJ,YAorCWA,KAAqBA,KAAO,GAEP,YAAxBhQ,SAASiQ,WACXP,GAAGQ,WAAM,EAAQF,MAEjBhQ,SAAS8P,iBAAiB,oBAAoB,WAC5CJ,GAAGQ,WAAM,EAAQF,SA1rCzB,YAgsCMG,UAA0BA,SAASP,YAAcO,SAASP,UAAU5K,UACtEmL,SAASP,UAAU5K,QAAUH,MAAM+K,UAAU5K,SAI/CjF,OAAOqQ,QAAU,eACXC,QAAU,CACZC,IAAKtM,UACL3B,KAAM+B,WACNd,MAAOoH,YACP6F,YAAa5J,mBACb6J,eAAgB3J,sBAChB4J,eAAgB7L,qBAChB8L,MAAOX,mBAGAK,QAAQnM,SACf8L,UAAS,WACH9L,UACqB,iBAAZA,QACTE,WAAWF,SAEXD,UAAUC,iBAIb0M,OAAS,SAEdzM,KACEkM,QAAQlM,KAAO,eAAkB,IAAI0M,KAAOC,UAAU9K,OAAQiK,KAAO,IAAInL,MAAM+L,MAAOE,MAAQ,EAAGA,MAAQF,KAAME,QAAUd,KAAKc,OAASD,UAAUC,OAC/If,SAASM,QAAQnM,KAAM8L,YAChB,IAAI9L,OAAOmM,QAAUM,OAAOzM,YAGhCkM,QA7BQ,GAiCjBL,qBApSE5P,UAl8BJ,WAm8BIC,OAASJ,SAASoB,cAAc,QACzByE,aAAa,KAAM,cAC1BzF,OAAOuE,UAAY,aACnBvE,OAAOgG,UACP,4HAA2IrE,SAASqB,KAAKK,MAAzJ,kFACA1B,SAASqB,KAAKO,YADd,sMAKA5B,SAASqB,KAAKzC,UALd,0KASAoB,SAASqB,KAAKvC,YATd,yIAeAkB,SAASqB,KAAKb,OAfd,sbA0BAR,SAASqB,KAAKG,MAAQ,KAAQxB,SAASkB,WA1BvC,+HA4BAlB,SAASqB,KAAKE,MAAQ,KAAQvB,SAASmB,WA5BvC,mDA8BAnB,SAASqB,KAAKC,KA9Bd,6CA+BAtB,SAASqB,KAAKM,OAAS,UAGvB1D,SAASwE,KAAKD,YAAYnE,QAG1BC,UAAYgF,MAAM,kBAClB/E,YAAc+E,MAAM,oBACpB5E,YAAc4E,MAAM,aACpB3E,YAAc2E,MAAM,aACpB9E,aAAe8E,MAAM,qBACrB7E,WAAa6E,MAAM,mBACnB1E,UAAY0E,MAAM,kBAClBzE,UAAYyE,MAAM,kBAClBxE,YAAcwE,MAAM,oBACpBvE,YAAcuE,MAAM,oBAGpBlB,WAAWpC,SAASC,IACpBoC,WAAWrC,SAASC,IAEpBiF,YAAY7G,OAAQ,aAAa,SAAUgH,OACzChH,OAAO8E,UAAU4F,OAAO,oBACxB1D,MAAM0G,qBAGR7G,YAAY5G,UAAW,aAAa,SAAU+G,OAC5CH,YAAYjH,SAAU,YAAasN,eAGrCrG,YAAY5G,UAAW,eAAe,SAAU+G,OAC9CA,MAAMyG,oBAGR5G,YAAY5G,UAAW,cAAc,SAAU+G,OAC7CpH,SAAS8P,iBAAiB,YAAaxC,WAAY,CAAEyD,SAAS,OAGhE9J,YAAY3G,YAAa,aAAa,SAAU8G,OAC9CH,YAAYjH,SAAU,YAAasN,eAGrCrG,YAAY3G,YAAa,cAAc,SAAU8G,OAC/CpH,SAAS8P,iBAAiB,YAAaxC,WAAY,CAAEyD,SAAS,OAGhE9J,YAAYzG,WAAY,UAAU,SAAU4G,WACtCO,MAAQnH,WAAWmH,OAEnB5G,WAAagB,SAASgB,SAExB4J,UADsB,KAAVhF,MAAeA,MAAQzB,gBAAgByB,WAKvDV,YAAYxG,YAAa,SAAS,SAAU2G,OAC1CuF,UAAU,IACVjC,iBAGFzD,YAAYvG,YAAa,SAAS,SAAU0G,OAC1CuF,YACAjC,iBAGFzD,YAAY5B,MAAM,cAAe,QAAS,qBAAqB,SAAU+B,OACvEpG,cAAgBoG,MAAMM,OAAOC,MAC7B6E,cACAG,eAGF1F,YAAY7G,OAAQ,QAAS,wBAAwB,SAAUgH,OAC7DlB,gBAAgBkB,MAAMM,OAAOhC,aAC7BiH,YAEI5K,SAASW,cACXgI,iBAIJzD,YAAYjH,SAAU,WAAW,SAAUoH,OACzCpH,SAASgR,oBAAoB,YAAa1D,eAG5CrG,YAAYjH,SAAU,YAAY,SAAUoH,OAC1CpH,SAASgR,oBAAoB,YAAa1D,eAG5CrG,YAAYjH,SAAU,aAAa,SAAUoH,OAC3ClG,aAAc,EACdd,OAAO8E,UAAU4F,OAAO,oBACxBJ,iBAGFzD,YAAYjH,SAAU,WAAW,SAAUoH,WACrClD,IAAMkD,MAAMlD,IACZwD,OAASN,MAAMM,OACfuJ,SAAW7J,MAAM6J,YAGT,WAAR/M,IACFwG,aAAY,GAHA,CAAC,MAAO,UAAW,YAAa,YAAa,cAMxCwG,SAAShN,OAC1BhD,aAAc,EACdd,OAAO8E,UAAU0C,IAAI,qBAIX,QAAR1D,KAAiBwD,OAAOhD,QAAQ,iBAAkB,KAChDyM,WAAahJ,uBACbiJ,eAAiBD,WAAW/I,QAC5BiJ,cAAgBF,WAAWG,MAE3BL,UAAYvJ,SAAW0J,gBACzBC,cAAcxJ,QACdT,MAAMyG,kBACIoD,UAAYvJ,SAAW2J,gBACjCD,eAAevJ,QACfT,MAAMyG,sBAKZ5G,YAAYjH,SAAU,QAAS,qBAAqB,SAAUoH,OAExDrD,aACFiD,uBAIFI,MAAMM,OAAOkH,mBAAmBvG,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,QAG9EtB,YAAY3G,YAAa,WAAW,SAAU8G,WACxCmK,UAAY,CACdC,QAAS,CAAC,GAAI,GACdC,UAAW,CAAC,EAAG,GACfC,UAAW,EAAE,EAAG,GAChBC,WAAY,CAAC,EAAG,IAGd7K,OAAOC,KAAKwK,WAAWL,SAAS9J,MAAMlD,OACxC6J,oBAAoBmC,WAAM,EAAQqB,UAAUnK,MAAMlD,MAClDkD,MAAMyG,qBAIV5G,YAAY5G,UAAW,QAASiN,YAChCrG,YAAYtG,UAAW,QAASuO,QAChCjI,YAAYpG,YAAa,QAASsO,aA7nCtC,CAwuCGpP,OAAQC,SAAUC"}