define("tiny_fontcolor/commands",["exports","editor_tiny/utils","core/str","./common"],(function(_exports,_utils,_str,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;let colorPickerContainer=null,isPickerVisible=!1,clickHandler=null,isTyping=!1,activityDetected=!1,closeTimer=null;const showColorPicker=(editor,buttonTitle)=>{hideColorPicker(),colorPickerContainer=document.createElement("div"),colorPickerContainer.className="tiny-fontcolor-picker",Object.assign(colorPickerContainer.style,{position:"fixed",zIndex:"999999",backgroundColor:"white",padding:"15px",borderRadius:"8px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",border:"1px solid #ddd",width:"200px"});const colorInput=document.createElement("input");colorInput.type="color",Object.assign(colorInput.style,{width:"100%",height:"50px",cursor:"pointer",border:"2px solid #eee",borderRadius:"6px",padding:"2px",display:"block"});const initialColor=function(editor){if(!editor||!editor.dom||!editor.selection)return null;const dom=editor.dom,selection=editor.selection,nodes=selection.getSelectedBlocks()||[selection.getNode()];for(const node of nodes){if(!node)continue;const color=dom.getStyle(node,"color")||node.getAttribute("color");if(color)return color;const coloredChildren=dom.select('*[style*="color"], *[color]',node);if((null==coloredChildren?void 0:coloredChildren.length)>0){var _coloredChildren$;const childColor=dom.getStyle(coloredChildren[0],"color")||(null===(_coloredChildren$=coloredChildren[0])||void 0===_coloredChildren$?void 0:_coloredChildren$.getAttribute("color"));if(childColor)return childColor}}return null}(editor);initialColor&&(colorInput.value=function(rgb){if(!rgb)return"#000000";const rgbValues=rgb.match(/\d+/g);if(!rgbValues||rgbValues.length<3)return"#000000";const r=parseInt(rgbValues[0]),g=parseInt(rgbValues[1]),b=parseInt(rgbValues[2]);return"#"+[r,g,b].map((x=>{const hex=x.toString(16).padStart(2,"0");return 1===hex.length?"0"+hex:hex})).join("")}(initialColor)),colorInput.addEventListener("input",(e=>{editor.execCommand("ForeColor",!1,e.target.value)})),colorInput.addEventListener("focus",(()=>{isTyping=!0,resetCloseTimer()})),colorInput.addEventListener("input",(()=>{activityDetected=!0,resetCloseTimer()})),colorInput.addEventListener("blur",(()=>{isTyping=!1,resetCloseTimer()})),colorInput.addEventListener("keydown",(()=>{isTyping=!0,activityDetected=!0,resetCloseTimer()})),colorPickerContainer.appendChild(colorInput),document.body.appendChild(colorPickerContainer),isPickerVisible=!0;const button=editor.editorContainer.querySelector(`.tox-tbtn[aria-label="${buttonTitle}"]`);if(button){const rect=button.getBoundingClientRect();Object.assign(colorPickerContainer.style,{top:`${rect.bottom}px`,left:`${rect.left}px`})}setTimeout((()=>colorInput.focus()),0),clickHandler=e=>{colorPickerContainer&&!colorPickerContainer.contains(e.target)&&hideColorPicker()},document.addEventListener("mousedown",clickHandler)};const hideColorPicker=()=>{colorPickerContainer&&isPickerVisible&&(colorPickerContainer.parentNode&&colorPickerContainer.parentNode.removeChild(colorPickerContainer),colorPickerContainer=null,isPickerVisible=!1,clickHandler&&(document.removeEventListener("mousedown",clickHandler),clickHandler=null)),isTyping=!1,activityDetected=!1};function resetCloseTimer(){clearTimeout(closeTimer),isPickerVisible&&colorPickerContainer&&(closeTimer=setTimeout((()=>{activityDetected||isTyping?(activityDetected=!1,resetCloseTimer()):hideColorPicker()}),isTyping?3e3:1500))}_exports.getSetup=async()=>{const[buttonTitle,menuTitle,btnImage]=await Promise.all([(0,_str.get_string)("button_fontcolor",_common.component),(0,_str.get_string)("menuitem_fontcolor",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,btnImage.html),editor.ui.registry.addButton(_common.fontColorButtonName,{icon:_common.icon,tooltip:buttonTitle,onAction:()=>{isPickerVisible?hideColorPicker():showColorPicker(editor,buttonTitle)}}),editor.on("blur",hideColorPicker)}}}));

//# sourceMappingURL=commands.min.js.map