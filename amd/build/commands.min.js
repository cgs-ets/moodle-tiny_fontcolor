define("tiny_fontcolor/commands",["exports","editor_tiny/utils","core/str","./common"],(function(_exports,_utils,_str,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Moodle tiny_fontcolor plugin.
   *
   * @module      tiny_fontcolor/commands
   * @copyright   2025 Veronica Bermegui
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   *
   */
let colorPickerContainer=null,isPickerVisible=!1,clickHandler=null,originalHide=null;let hideColorPicker=()=>{colorPickerContainer&&isPickerVisible&&(document.body.removeChild(colorPickerContainer),colorPickerContainer=null,isPickerVisible=!1)};_exports.getSetup=async()=>{const[buttonTitle,menuTitle,btnImage]=await Promise.all([(0,_str.get_string)("button_fontcolor",_common.component),(0,_str.get_string)("menuitem_fontcolor",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,btnImage.html),editor.ui.registry.addButton(_common.fontColorButtonName,{icon:_common.icon,tooltip:buttonTitle,onAction:()=>{isPickerVisible?hideColorPicker():((editor,buttonTitle)=>{var _editor$editorContain;hideColorPicker(),colorPickerContainer=document.createElement("div"),colorPickerContainer.className="fontcolor-picker",Object.assign(colorPickerContainer.style,{position:"absolute",zIndex:"999999",backgroundColor:"white",padding:"5px",borderRadius:"3px",boxShadow:"0 2px 8px rgba(0,0,0,0.2)",border:"1px solid #ddd"});const colorInput=document.createElement("input");colorInput.type="color",Object.assign(colorInput.style,{width:"30px",height:"30px",border:"none",cursor:"pointer",padding:0}),colorInput.addEventListener("change",(()=>{editor.execCommand("ForeColor",!1,colorInput.value),hideColorPicker()}));const button=null===(_editor$editorContain=editor.editorContainer)||void 0===_editor$editorContain?void 0:_editor$editorContain.querySelector(`.tox-tbtn[aria-label="${buttonTitle}"]`);if(button){const rect=button.getBoundingClientRect();Object.assign(colorPickerContainer.style,{top:`${rect.bottom+window.scrollY}px`,left:`${rect.left+window.scrollX}px`})}colorPickerContainer.appendChild(colorInput),document.body.appendChild(colorPickerContainer),isPickerVisible=!0,setTimeout((()=>{clickHandler=e=>{var _colorPickerContainer;null!==(_colorPickerContainer=colorPickerContainer)&&void 0!==_colorPickerContainer&&_colorPickerContainer.contains(e.target)||null!=button&&button.contains(e.target)||hideColorPicker()},document.addEventListener("click",clickHandler),originalHide=hideColorPicker,hideColorPicker=()=>{clickHandler&&(document.removeEventListener("click",clickHandler),clickHandler=null),originalHide(),hideColorPicker=originalHide}}),0)})(editor,buttonTitle)}}),editor.ui.registry.addMenuItem(_common.fontColorMenuItemName,{icon:_common.icon,text:menuTitle,onAction:()=>{editor.execCommand("ForeColor",!1,"#000000")}}),editor.on("blur",hideColorPicker)}}}));

//# sourceMappingURL=commands.min.js.map